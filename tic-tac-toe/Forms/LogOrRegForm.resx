<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>